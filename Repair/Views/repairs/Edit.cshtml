@if (Session["UserID"] == null)
{
    Response.Redirect("~/Home/Index");
}
@model Repair.Models.repair

@{
    ViewBag.Title = "Edit";
}

<h2>แก้ไขการแจ้งซ่อม</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.Label("หัวข้อที่แจ้ง", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.jobname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.jobname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("รายละเอียด", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descript, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descript, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("วันเวลาที่แจ้ง", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.datetime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.datetime, "", new { @class = "text-danger" })
            </div>
        </div>

@if (Session["UserID"] != null && Session["permiss"].ToString() == "admin")
{
        <div class="form-group">
            @Html.Label("สถานะ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "New",
                        Value = "New"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "progress",
                        Value = "progress",
                        Selected = true
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Finished",
                        Value = "Finished"
                        
                    });

                }

                @Html.DropDownListFor(model => model.status, listItems, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>
}
        <div class="form-group">
            @Html.Label("รหัสนักศึกษา", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.studentid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.studentid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("หมายเลขห้องพัก", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.roomno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.roomno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("การอณุญาตเข้าห้องเมื่อไม่อยู่", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.choich, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.choich, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-9">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
